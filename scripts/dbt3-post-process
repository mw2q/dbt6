#!/bin/sh
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2003-2006 Open Source Development Labs, Inc.
#               2003-2006 Jenny Zhang
#               2005-2014 Mark Wong
#               2014      2ndQuadrant, Ltd.

make_sar_csv() {
	FILE=$1

	DIR=`dirname ${FILE}`

	${SADF} -P ALL ${FILE} > ${DIR}/sar-cpu.csv
	${SADF} ${FILE} -- -B > ${DIR}/sar-paging.csv
	${SADF} ${FILE} -- -d -p > ${DIR}/sar-blockdev.csv
	${SADF} ${FILE} -- -R > ${DIR}/sar-mem1.csv
	${SADF} ${FILE} -- -r > ${DIR}/sar-mem2.csv
	${SADF} ${FILE} -- -W > ${DIR}/sar-swap.csv
}

DIR=`dirname $0`
. ${DIR}/dbt3_profile || exit 1

PLOT_OPTS=""
FLAG_POWER_TEST=0
FLAG_THROUGHPUT_TEST=0
while getopts "23i:n:o:p:s:z" OPT; do
	case ${OPT} in
	2)
		FLAG_POWER_TEST=1
		PLOT_OPTS="${PLOT_OPTS} -2"
		;;
	3)
		FLAG_THROUGHPUT_TEST=1
		PLOT_OPTS="${PLOT_OPTS} -3"
		;;
	i)
		INFILE=${OPTARG}
		;;
	n)
		STREAMS=${OPTARG}
		;;
	o)
		OUTFILE=${OPTARG}
		;;
	p)
		PERFNUM=${OPTARG}
		;;
	s)
		SCALE_FACTOR=${OPTARG}
		;;
	z)
		NO_REFRESH_FLAG="-z"
		PLOT_OPTS="${PLOT_OPTS} -z"
		;;
	esac
done

SCRIPT_DIR="${DBT3_HOME}/scripts";

#
# Make sure the outfile is created.
#
touch ${OUTFILE}

which sadf > /dev/null 2>&1
if [ $? -eq 0 ]; then
	SADF="sadf -d -U"
else
	SADF=true
fi

OUTDIR=`dirname ${INFILE}`
make_sar_csv ${OUTDIR}/load/sar_raw.out

if [ ${FLAG_POWER_TEST} -eq 1 ]; then
#	POWER=`perl ${SCRIPT_DIR}/get_power.pl -i ${INFILE} -p ${PERFNUM} -s ${SCALE_FACTOR} ${NO_REFRESH_FLAG}`
#	echo "power = ${POWER}"  | tee -a ${OUTFILE}

	for QDIR in `ls -d ${OUTDIR}/power${PERFNUM}/q?_?`; do
		make_sar_csv ${QDIR}/sar_raw.out
	done
fi

if [ ${FLAG_THROUGHPUT_TEST} -eq 1 ]; then
	THROUGHPUT=`${SCRIPT_DIR}/get-throughput -i ${INFILE} -p ${PERFNUM} -s ${SCALE_FACTOR} -n ${STREAMS}`
	echo "throughput = ${THROUGHPUT}" | tee -a ${OUTFILE}

	make_sar_csv ${OUTDIR}/throughput${PERFNUM}/sar_raw.out
fi

if [ ${FLAG_POWER_TEST} -eq 1 ] && [ ${FLAG_THROUGHPUT_TEST} -eq 1 ]; then
	COMPOSITE=`echo "scale=2; sqrt(${POWER} * ${THROUGHPUT})" | bc -l`
	echo "composite = ${COMPOSITE}" | tee -a ${OUTFILE}
fi

# -------------------------------------
# Plot a result chart with using gnuplot
# -------------------------------------
#$SCRIPT_DIR/dbt3-plot-results -i ${INFILE} ${NO_REFRESH_FLAG} \
#		-o `dirname ${OUTFILE}` ${PLOT_OPTS} \
#		|| >&2 echo "Failed to plot query times..."
